16
{"last_modification_time":1546363868,"language":1,"import_file":"c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/src/autonomous.cpp","args_hash":14444592582462952662,"includes":[],"dependencies":[],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,2,3,4,5,6,12,13,17,18,19,20,21,22,23,30,31,32],"uses":[]},{"id":1,"usr":22,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[9,10,11,14,15,16],"uses":[]}],"funcs":[{"id":0,"usr":4746349674543882792,"detailed_name":"void autonomous()","short_name_offset":5,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"AUTONOMOUS///////////////////////////////////////////////////","declarations":[],"spell":"94:6-94:16|-1|1|2","extent":"94:1-198:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":6898075572698385111,"detailed_name":"const int DRIVE_MOTOR_LEFT_1","short_name_offset":10,"short_name_size":18,"hover":"const int DRIVE_MOTOR_LEFT_1 = 1","comments":"1,2,3 = Front, Middle, Back","declarations":[],"spell":"11:12-11:30|-1|1|2","extent":"11:2-11:34|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":1,"usr":12014672582200958344,"detailed_name":"const int DRIVE_MOTOR_LEFT_2","short_name_offset":10,"short_name_size":18,"hover":"const int DRIVE_MOTOR_LEFT_2 = 2","comments":"","declarations":[],"spell":"12:12-12:30|-1|1|2","extent":"12:2-12:34|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":2,"usr":6077660176697154439,"detailed_name":"const int DRIVE_MOTOR_LEFT_3","short_name_offset":10,"short_name_size":18,"hover":"const int DRIVE_MOTOR_LEFT_3 = 3","comments":"","declarations":[],"spell":"13:12-13:30|-1|1|2","extent":"13:2-13:34|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":3,"usr":15427632267401836534,"detailed_name":"const int DRIVE_MOTOR_RIGHT_1","short_name_offset":10,"short_name_size":19,"hover":"const int DRIVE_MOTOR_RIGHT_1 = 4","comments":"1,2,3 = Front, Middle, Back","declarations":[],"spell":"14:12-14:31|-1|1|2","extent":"14:2-14:35|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":4,"usr":10523197224610088587,"detailed_name":"const int DRIVE_MOTOR_RIGHT_2","short_name_offset":10,"short_name_size":19,"hover":"const int DRIVE_MOTOR_RIGHT_2 = 5","comments":"","declarations":[],"spell":"15:12-15:31|-1|1|2","extent":"15:2-15:35|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":5,"usr":1862978007365818364,"detailed_name":"const int DRIVE_MOTOR_RIGHT_3","short_name_offset":10,"short_name_size":19,"hover":"const int DRIVE_MOTOR_RIGHT_3 = 6","comments":"","declarations":[],"spell":"16:12-16:31|-1|1|2","extent":"16:2-16:35|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":6,"usr":557933369072039001,"detailed_name":"const int DRIVE_PNEUMATIC","short_name_offset":10,"short_name_size":15,"hover":"const int DRIVE_PNEUMATIC = 1","comments":"port A //change to A if this doesn't work","declarations":[],"spell":"17:12-17:27|-1|1|2","extent":"17:2-17:31|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":7,"usr":3383150974972589240,"detailed_name":"const auto WHEEL_DIAMETER","short_name_offset":11,"short_name_size":14,"hover":"","comments":"","declarations":[],"spell":"18:13-18:27|-1|1|2","extent":"18:2-18:27|-1|1|0","uses":[],"kind":13,"storage":1},{"id":8,"usr":2386746335383538932,"detailed_name":"const auto CHASSIS_WIDTH","short_name_offset":11,"short_name_size":13,"hover":"","comments":"","declarations":[],"spell":"19:13-19:26|-1|1|2","extent":"19:2-19:26|-1|1|0","uses":[],"kind":13,"storage":1},{"id":9,"usr":3792431601466665642,"detailed_name":"const double liftkP","short_name_offset":13,"short_name_size":6,"hover":"const double liftkP = 1.0","comments":"Lift definition\r\nAssume this is correct for now\r\nTODO: Update with the real robot values","declarations":[],"spell":"25:15-25:21|-1|1|2","extent":"25:2-25:27|-1|1|0","type":1,"uses":[],"kind":13,"storage":1},{"id":10,"usr":16320906704454876236,"detailed_name":"const double liftkI","short_name_offset":13,"short_name_size":6,"hover":"const double liftkI = 0.001","comments":"","declarations":[],"spell":"26:15-26:21|-1|1|2","extent":"26:2-26:29|-1|1|0","type":1,"uses":[],"kind":13,"storage":1},{"id":11,"usr":14272188382886897610,"detailed_name":"const double liftkD","short_name_offset":13,"short_name_size":6,"hover":"const double liftkD = 0.1","comments":"","declarations":[],"spell":"27:15-27:21|-1|1|2","extent":"27:2-27:27|-1|1|0","type":1,"uses":[],"kind":13,"storage":1},{"id":12,"usr":17951379677299196249,"detailed_name":"const int LIFT_MOTOR_RIGHT","short_name_offset":10,"short_name_size":16,"hover":"const int LIFT_MOTOR_RIGHT = 7","comments":"","declarations":[],"spell":"28:12-28:28|-1|1|2","extent":"28:2-28:32|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":13,"usr":11043778686626165968,"detailed_name":"const int LIFT_MOTOR_LEFT","short_name_offset":10,"short_name_size":15,"hover":"const int LIFT_MOTOR_LEFT = 8","comments":"","declarations":[],"spell":"29:12-29:27|-1|1|2","extent":"29:2-29:31|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":14,"usr":10529344012705944764,"detailed_name":"const double flipkP","short_name_offset":13,"short_name_size":6,"hover":"const double flipkP = 1.0","comments":"Intake definition\r\nAssume this is correct for now\r\nTODO: Update with the real robot values","declarations":[],"spell":"34:15-34:21|-1|1|2","extent":"34:2-34:27|-1|1|0","type":1,"uses":[],"kind":13,"storage":1},{"id":15,"usr":3430856842587699148,"detailed_name":"const double flipkI","short_name_offset":13,"short_name_size":6,"hover":"const double flipkI = 0.001","comments":"","declarations":[],"spell":"35:15-35:21|-1|1|2","extent":"35:2-35:29|-1|1|0","type":1,"uses":[],"kind":13,"storage":1},{"id":16,"usr":11519655638830171026,"detailed_name":"const double flipkD","short_name_offset":13,"short_name_size":6,"hover":"const double flipkD = 0.1","comments":"","declarations":[],"spell":"36:15-36:21|-1|1|2","extent":"36:2-36:27|-1|1|0","type":1,"uses":[],"kind":13,"storage":1},{"id":17,"usr":11134713337135695964,"detailed_name":"const int INTAKE_MOTOR_RIGHT","short_name_offset":10,"short_name_size":18,"hover":"const int INTAKE_MOTOR_RIGHT = 9","comments":"1 for side roller","declarations":[],"spell":"37:12-37:30|-1|1|2","extent":"37:2-37:34|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":18,"usr":14526642296479055957,"detailed_name":"const int ROTATOR_MOTOR_RIGHT","short_name_offset":10,"short_name_size":19,"hover":"const int ROTATOR_MOTOR_RIGHT = 10","comments":"2 for rotator","declarations":[],"spell":"38:12-38:31|-1|1|2","extent":"38:2-38:36|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":19,"usr":4962162877833253720,"detailed_name":"const int INTAKE_MOTOR_LEFT","short_name_offset":10,"short_name_size":17,"hover":"const int INTAKE_MOTOR_LEFT = 11","comments":"","declarations":[],"spell":"39:12-39:29|-1|1|2","extent":"39:2-39:34|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":20,"usr":9183788081992079876,"detailed_name":"const int ROTATOR_MOTOR_LEFT","short_name_offset":10,"short_name_size":18,"hover":"const int ROTATOR_MOTOR_LEFT = 12","comments":"","declarations":[],"spell":"40:12-40:30|-1|1|2","extent":"40:2-40:35|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":21,"usr":14075025617458457195,"detailed_name":"const int PUNCHER_MOTOR_1","short_name_offset":10,"short_name_size":15,"hover":"const int PUNCHER_MOTOR_1 = 13","comments":"Puncher definition\r\nAssume this is correct for now\r\nTODO: Update with the real robot values","declarations":[],"spell":"45:12-45:27|-1|1|2","extent":"45:2-45:32|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":22,"usr":1134084095081662229,"detailed_name":"const int PUNCHER_MOTOR_2","short_name_offset":10,"short_name_size":15,"hover":"const int PUNCHER_MOTOR_2 = 14","comments":"","declarations":[],"spell":"46:12-46:27|-1|1|2","extent":"46:2-46:32|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":23,"usr":11672413002414341835,"detailed_name":"const int CONVEYOR_MOTOR","short_name_offset":10,"short_name_size":14,"hover":"const int CONVEYOR_MOTOR = 15","comments":"Conveyor definition\r\nAssume this is correct for now\r\nTODO: Update with the real robot values","declarations":[],"spell":"51:12-51:26|-1|1|2","extent":"51:2-51:31|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":24,"usr":855583662895899643,"detailed_name":"auto driveController","short_name_offset":5,"short_name_size":15,"hover":"","comments":"Controller object creation\r\nTODO: Reverse motors that need to be reversed","declarations":[],"spell":"55:7-55:22|-1|1|2","extent":"55:2-55:22|-1|1|0","uses":[],"kind":13,"storage":1},{"id":25,"usr":17740042877562862647,"detailed_name":"auto liftController","short_name_offset":5,"short_name_size":14,"hover":"","comments":"","declarations":[],"spell":"61:7-61:21|-1|1|2","extent":"61:2-61:21|-1|1|0","uses":[],"kind":13,"storage":1},{"id":26,"usr":9308898148615638049,"detailed_name":"auto intakeController","short_name_offset":5,"short_name_size":16,"hover":"","comments":"","declarations":[],"spell":"65:7-65:23|-1|1|2","extent":"65:2-65:23|-1|1|0","uses":[],"kind":13,"storage":1},{"id":27,"usr":7071677754683771782,"detailed_name":"auto rotatorController","short_name_offset":5,"short_name_size":17,"hover":"","comments":"","declarations":[],"spell":"68:7-68:24|-1|1|2","extent":"68:2-68:24|-1|1|0","uses":[],"kind":13,"storage":1},{"id":28,"usr":16331135900090552798,"detailed_name":"auto puncherController","short_name_offset":5,"short_name_size":17,"hover":"","comments":"","declarations":[],"spell":"72:7-72:24|-1|1|2","extent":"72:2-72:24|-1|1|0","uses":[],"kind":13,"storage":1},{"id":29,"usr":7125022357769217464,"detailed_name":"auto conveyorController","short_name_offset":5,"short_name_size":18,"hover":"","comments":"","declarations":[],"spell":"75:7-75:25|-1|1|2","extent":"75:2-75:25|-1|1|0","uses":[],"kind":13,"storage":1},{"id":30,"usr":3178405657212399918,"detailed_name":"const int STARTING_HEIGHT","short_name_offset":10,"short_name_size":15,"hover":"const int STARTING_HEIGHT = 0","comments":"TODO: Find actual low and high goal values in degrees (TUNING)","declarations":[],"spell":"90:11-90:26|-1|1|2","extent":"90:1-90:30|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":31,"usr":17532599023939136912,"detailed_name":"const int LOW_GOAL_HEIGHT","short_name_offset":10,"short_name_size":15,"hover":"const int LOW_GOAL_HEIGHT = 53","comments":"low goal is 69% of high goal more or less but this is in degrees so idk","declarations":[],"spell":"91:11-91:26|-1|1|2","extent":"91:1-91:31|-1|1|0","type":0,"uses":[],"kind":13,"storage":1},{"id":32,"usr":2977797982348174207,"detailed_name":"const int HIGH_GOAL_HEIGHT","short_name_offset":10,"short_name_size":16,"hover":"const int HIGH_GOAL_HEIGHT = 75","comments":"","declarations":[],"spell":"92:11-92:27|-1|1|2","extent":"92:1-92:32|-1|1|0","type":0,"uses":[],"kind":13,"storage":1}]}