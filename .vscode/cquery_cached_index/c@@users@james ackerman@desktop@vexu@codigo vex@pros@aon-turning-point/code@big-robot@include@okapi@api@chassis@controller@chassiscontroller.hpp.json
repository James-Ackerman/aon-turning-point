16
{"last_modification_time":0,"language":2,"import_file":"c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/okapi/api/chassis/controller/chassiscontroller.hpp","args_hash":14444592582462952662,"includes":[],"dependencies":[],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":5127515870942423657,"detailed_name":"okapi","short_name_offset":0,"short_name_size":5,"kind":3,"hover":"","comments":"","declarations":[],"spell":"18:11-18:16|-1|1|2","extent":"18:1-293:2|-1|1|0","bases":[1],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["18:11-18:16|-1|1|4"]},{"id":1,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":2,"usr":14503788931148346905,"detailed_name":"okapi::ChassisController","short_name_offset":7,"short_name_size":17,"kind":5,"hover":"","comments":"","declarations":["28:12-28:29|-1|1|4","32:4-32:21|-1|1|4"],"spell":"19:7-19:24|0|2|2","extent":"19:1-292:2|0|2|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"vars":[0,1],"instances":[],"uses":["28:12-28:29|2|2|4"]},{"id":3,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0],"uses":[]},{"id":4,"usr":3,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1],"uses":[]}],"funcs":[{"id":0,"usr":7521380699813817773,"detailed_name":"void okapi::ChassisController::ChassisController(const int &imodel, double imaxVelocity, double imaxVoltage)","short_name_offset":12,"short_name_size":17,"kind":9,"storage":1,"hover":"","comments":"\r\nA ChassisController adds a closed-loop layer on top of a ChassisModel. moveDistance and\r\nturnAngle both use closed-loop control to move the robot. There are passthrough functions for\r\neverything defined in ChassisModel.\r\n\r\n@param imodel underlying ChassisModel","declarations":[{"spell":"28:12-28:29|2|2|1","param_spellings":["28:67-28:73","29:37-29:49","30:37-30:48"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":3676343449803076598,"detailed_name":"void okapi::ChassisController::~ChassisController()","short_name_offset":31,"short_name_size":18,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"32:3-32:21|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":10534103406064807395,"detailed_name":"void okapi::ChassisController::moveDistance(int itarget)","short_name_offset":31,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\nDrives the robot straight for a distance (using closed-loop control).\r\n\r\n@param itarget distance to travel","declarations":[{"spell":"39:16-39:28|2|2|1","param_spellings":["39:37-39:44"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":8512335176486198524,"detailed_name":"void okapi::ChassisController::moveDistance(double itarget)","short_name_offset":31,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\nDrives the robot straight for a distance (using closed-loop control).\r\n\r\n@param itarget distance to travel in motor degrees","declarations":[{"spell":"46:16-46:28|2|2|1","param_spellings":["46:36-46:43"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":13512486420952912391,"detailed_name":"void okapi::ChassisController::moveDistanceAsync(int itarget)","short_name_offset":31,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"\r\nSets the target distance for the robot to drive straight (using closed-loop control).\r\n\r\n@param itarget distance to travel","declarations":[{"spell":"53:16-53:33|2|2|1","param_spellings":["53:42-53:49"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":313645081075120686,"detailed_name":"void okapi::ChassisController::moveDistanceAsync(double itarget)","short_name_offset":31,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"\r\nSets the target distance for the robot to drive straight (using closed-loop control).\r\n\r\n@param itarget distance to travel in motor degrees","declarations":[{"spell":"60:16-60:33|2|2|1","param_spellings":["60:41-60:48"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":18408991960283681041,"detailed_name":"void okapi::ChassisController::turnAngle(int idegTarget)","short_name_offset":31,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\nTurns the robot clockwise in place (using closed-loop control).\r\n\r\n@param idegTarget angle to turn for","declarations":[{"spell":"67:16-67:25|2|2|1","param_spellings":["67:33-67:43"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":13721588303312327456,"detailed_name":"void okapi::ChassisController::turnAngle(double idegTarget)","short_name_offset":31,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\nTurns the robot clockwise in place (using closed-loop control).\r\n\r\n@param idegTarget angle to turn for in motor degrees","declarations":[{"spell":"74:16-74:25|2|2|1","param_spellings":["74:33-74:43"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":7147035660545376143,"detailed_name":"void okapi::ChassisController::turnAngleAsync(int idegTarget)","short_name_offset":31,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"\r\nSets the target angle for the robot to turn clockwise in place (using closed-loop control).\r\n\r\n@param idegTarget angle to turn for","declarations":[{"spell":"81:16-81:30|2|2|1","param_spellings":["81:38-81:48"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":6665997378271189461,"detailed_name":"void okapi::ChassisController::turnAngleAsync(double idegTarget)","short_name_offset":31,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"\r\nSets the target angle for the robot to turn clockwise in place (using closed-loop control).\r\n\r\n@param idegTarget angle to turn for in motor degrees","declarations":[{"spell":"88:16-88:30|2|2|1","param_spellings":["88:38-88:48"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":6912285035946255286,"detailed_name":"void okapi::ChassisController::setTurnsMirrored(bool ishouldMirror)","short_name_offset":31,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"\r\nSets whether turns should be mirrored.\r\n\r\n@param ishouldMirror whether turns should be mirrored","declarations":[{"spell":"95:16-95:32|2|2|1","param_spellings":["95:38-95:51"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":7477820547354016188,"detailed_name":"void okapi::ChassisController::waitUntilSettled()","short_name_offset":31,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"\r\nDelays until the currently executing movement completes.","declarations":[{"spell":"100:16-100:32|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":14700927946473346757,"detailed_name":"void okapi::ChassisController::forward(double ispeed) const","short_name_offset":31,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"\r\nDrive the robot forwards (using open-loop control).\r\n\r\n@param ipower motor power","declarations":[{"spell":"107:8-107:15|2|2|1","param_spellings":["107:23-107:29"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":9183954328774677997,"detailed_name":"void okapi::ChassisController::driveVector(double iforwardSpeed, double iyaw) const","short_name_offset":31,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\r\nDrive the robot in an arc (using open-loop control).\r\nThe algorithm is (approximately):\r\n  leftPower = forwardSpeed + yaw\r\n  rightPower = forwardSpeed - yaw\r\n\r\n@param iforwardSpeed speed in the forward direction\r\n@param iyaw speed around the vertical axis","declarations":[{"spell":"118:8-118:19|2|2|1","param_spellings":["118:27-118:40","118:49-118:53"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":10479132292408223853,"detailed_name":"void okapi::ChassisController::rotate(double ispeed) const","short_name_offset":31,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"\r\nTurn the robot clockwise (using open-loop control).\r\n\r\n@param ipower motor power","declarations":[{"spell":"125:8-125:14|2|2|1","param_spellings":["125:22-125:28"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":10048107888390368751,"detailed_name":"void okapi::ChassisController::stop()","short_name_offset":31,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\nStop the robot (set all the motors to 0).","declarations":[{"spell":"130:8-130:12|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":17126510800629359517,"detailed_name":"void okapi::ChassisController::tank(double ileftSpeed, double irightSpeed, double ithreshold) const","short_name_offset":31,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\nDrive the robot with a tank drive layout. Uses voltage mode.\r\n\r\n@param ileftSpeed left side speed\r\n@param irightSpeed right side speed\r\n@param ithreshold deadband on joystick values","declarations":[{"spell":"139:8-139:12|2|2|1","param_spellings":["139:20-139:30","139:39-139:50","139:59-139:69"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":8082095453217824362,"detailed_name":"void okapi::ChassisController::arcade(double iforwardSpeed, double iyaw, double ithreshold) const","short_name_offset":31,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"\r\nDrive the robot with an arcade drive layout.\r\n\r\n@param iforwardSpeed speed in the forward direction\r\n@param iyaw speed around the vertical axis\r\n@param ithreshold deadband on joystick values","declarations":[{"spell":"148:8-148:14|2|2|1","param_spellings":["148:22-148:35","148:44-148:48","148:57-148:67"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":18,"usr":11897845450965624355,"detailed_name":"void okapi::ChassisController::left(double ispeed) const","short_name_offset":31,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\nPower the left side motors.\r\n\r\n@param ipower motor power","declarations":[{"spell":"155:8-155:12|2|2|1","param_spellings":["155:20-155:26"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":19,"usr":12624663229414745209,"detailed_name":"void okapi::ChassisController::right(double ispeed) const","short_name_offset":31,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"\r\nPower the right side motors.\r\n\r\n@param ipower motor power","declarations":[{"spell":"162:8-162:13|2|2|1","param_spellings":["162:21-162:27"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":20,"usr":4661525766561485171,"detailed_name":"int okapi::ChassisController::getSensorVals() const","short_name_offset":30,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\r\nRead the sensors.\r\n\r\n@return sensor readings in the format {left, right}","declarations":[{"spell":"169:31-169:44|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":21,"usr":6361532868234900085,"detailed_name":"void okapi::ChassisController::resetSensors() const","short_name_offset":31,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\nReset the sensors to their zero point.","declarations":[{"spell":"174:8-174:20|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":22,"usr":12789651483327026013,"detailed_name":"void okapi::ChassisController::setBrakeMode(int mode) const","short_name_offset":31,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\nSet the brake mode for each motor.\r\n\r\n@param mode new brake mode","declarations":[{"spell":"181:8-181:20|2|2|1","param_spellings":["181:46-181:50"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":23,"usr":5047331212932375935,"detailed_name":"void okapi::ChassisController::setEncoderUnits(int units) const","short_name_offset":31,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"\r\nSet the encoder units for each motor.\r\n\r\n@param units new motor encoder units","declarations":[{"spell":"188:8-188:23|2|2|1","param_spellings":["188:52-188:57"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":24,"usr":11331433193573581084,"detailed_name":"void okapi::ChassisController::setGearing(int gearset) const","short_name_offset":31,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\r\nSet the gearset for each motor.\r\n\r\n@param gearset new motor gearset","declarations":[{"spell":"195:8-195:18|2|2|1","param_spellings":["195:42-195:49"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":25,"usr":12393194774371523274,"detailed_name":"void okapi::ChassisController::setPosPID(double ikF, double ikP, double ikI, double ikD) const","short_name_offset":31,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\nSets new PID constants.\r\n\r\n@param ikF the feed-forward constant\r\n@param ikP the proportional constant\r\n@param ikI the integral constant\r\n@param ikD the derivative constant","declarations":[{"spell":"205:8-205:17|2|2|1","param_spellings":["205:25-205:28","205:37-205:40","205:49-205:52","205:61-205:64"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":26,"usr":12617164774492775659,"detailed_name":"void okapi::ChassisController::setPosPIDFull(double ikF, double ikP, double ikI, double ikD, double ifilter, double ilimit, double ithreshold, double iloopSpeed) const","short_name_offset":31,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\r\nSets new PID constants.\r\n\r\n@param ikF the feed-forward constant\r\n@param ikP the proportional constant\r\n@param ikI the integral constant\r\n@param ikD the derivative constant\r\n@param ifilter a constant used for filtering the profile acceleration\r\n@param ilimit the integral limit\r\n@param ithreshold the threshold for determining if a position movement has reached its goal\r\n@param iloopSpeed the rate at which the PID computation is run (in ms)","declarations":[{"spell":"219:8-219:21|2|2|1","param_spellings":["219:29-219:32","220:29-220:32","221:29-221:32","222:29-222:32","223:29-223:36","224:29-224:35","225:29-225:39","226:29-226:39"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":27,"usr":9328960278140318806,"detailed_name":"void okapi::ChassisController::setVelPID(double ikF, double ikP, double ikI, double ikD) const","short_name_offset":31,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\nSets new PID constants.\r\n\r\n@param ikF the feed-forward constant\r\n@param ikP the proportional constant\r\n@param ikI the integral constant\r\n@param ikD the derivative constant","declarations":[{"spell":"236:8-236:17|2|2|1","param_spellings":["236:25-236:28","236:37-236:40","236:49-236:52","236:61-236:64"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":28,"usr":2429632042082645626,"detailed_name":"void okapi::ChassisController::setVelPIDFull(double ikF, double ikP, double ikI, double ikD, double ifilter, double ilimit, double ithreshold, double iloopSpeed) const","short_name_offset":31,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\r\nSets new PID constants.\r\n\r\n@param ikF the feed-forward constant\r\n@param ikP the proportional constant\r\n@param ikI the integral constant\r\n@param ikD the derivative constant\r\n@param ifilter a constant used for filtering the profile acceleration\r\n@param ilimit the integral limit\r\n@param ithreshold the threshold for determining if a position movement has reached its goal\r\n@param iloopSpeed the rate at which the PID computation is run (in ms)","declarations":[{"spell":"250:8-250:21|2|2|1","param_spellings":["250:29-250:32","251:29-251:32","252:29-252:32","253:29-253:32","254:29-254:36","255:29-255:35","256:29-256:39","257:29-257:39"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":29,"usr":16622784180793341513,"detailed_name":"void okapi::ChassisController::setMaxVelocity(double imaxVelocity)","short_name_offset":31,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"\r\nSets a new maximum velocity in RPM [0-600].\r\n\r\n@param imaxVelocity the new maximum velocity","declarations":[{"spell":"264:8-264:22|2|2|1","param_spellings":["264:30-264:42"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":30,"usr":3030514800067424227,"detailed_name":"void okapi::ChassisController::setMaxVoltage(double imaxVoltage)","short_name_offset":31,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\r\nSets a new maximum voltage in mV [0-12000].\r\n\r\n@param imaxVoltage the new maximum voltage","declarations":[{"spell":"271:8-271:21|2|2|1","param_spellings":["271:29-271:40"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":31,"usr":2967717839208740463,"detailed_name":"int okapi::ChassisController::getChassisModel() const","short_name_offset":30,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"\r\nGet the underlying ChassisModel. This should be used sparingly and carefully because it can\r\nresult in multiple owners writing to the same set of motors.","declarations":[{"spell":"277:33-277:48|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":32,"usr":234819094048476839,"detailed_name":"int okapi::ChassisController::getChassisScales() const","short_name_offset":30,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"\r\nGet the ChassisScales.","declarations":[{"spell":"282:25-282:41|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":33,"usr":14801863164821084829,"detailed_name":"int okapi::ChassisController::getGearsetRatioPair() const","short_name_offset":30,"short_name_size":19,"kind":6,"storage":1,"hover":"","comments":"\r\nGet the GearsetRatioPair.","declarations":[{"spell":"287:43-287:62|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":967043381371231026,"detailed_name":"int okapi::ChassisController::model","short_name_offset":30,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"290:33-290:38|2|2|2","extent":"290:3-290:38|2|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":1,"usr":3060198654723328154,"detailed_name":"bool okapi::ChassisController::normalTurns","short_name_offset":31,"short_name_size":11,"hover":"bool okapi::ChassisController::normalTurns{true}","comments":"","declarations":[],"spell":"291:8-291:19|2|2|2","extent":"291:3-291:25|2|2|0","type":4,"uses":[],"kind":8,"storage":0}]}